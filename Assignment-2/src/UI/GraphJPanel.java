/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Model.Patient;
import Model.Person;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author rutuja
 */
public class GraphJPanel extends javax.swing.JPanel {

    /**
     * Creates new form GraphJPanel
     */
    private JPanel userProcessContainer;
    private Person person;
    private Patient patient;
    private DefaultCategoryDataset vitalSignDataSet;
    private GraphJPanel graphPanel;
    
    public GraphJPanel(Person person, JPanel userProcessContainer) {
        initComponents();
        this.setSize(2000,2000);
        this.userProcessContainer = userProcessContainer;
        this.person = person;
        
        patient = person.getPatientList().get(0);
        
        populateGraph();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewPanel = new javax.swing.JPanel();
        btnback = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout viewPanelLayout = new javax.swing.GroupLayout(viewPanel);
        viewPanel.setLayout(viewPanelLayout);
        viewPanelLayout.setHorizontalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 410, Short.MAX_VALUE)
        );
        viewPanelLayout.setVerticalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 369, Short.MAX_VALUE)
        );

        add(viewPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(74, 96, -1, -1));

        btnback.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        btnback.setText("<< Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });
        add(btnback, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 30, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);   
    }//GEN-LAST:event_btnbackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JPanel viewPanel;
    // End of variables declaration//GEN-END:variables

    private void populateGraph() {
        try   {
        vitalSignDataSet = new DefaultCategoryDataset();
          
        patient.getVitalSignHistory().getVitalSignList().stream().map(vs -> {
            vitalSignDataSet.addValue(vs.getRespRate(), "Respiration Rate", vs.getTime());
                return vs;
            }).map(vs -> {
                vitalSignDataSet.addValue(vs.getHeartRate(), "Heart Rate", vs.getTime());
                return vs;
            }).forEachOrdered(vs -> {
                vitalSignDataSet.addValue(vs.getBp(), "Blood Pressure", vs.getTime());
            });
        
        JFreeChart chartFactory = ChartFactory.createBarChart3D("VitalSign Pattern", "Timestamp", "VitalSign", vitalSignDataSet, PlotOrientation.VERTICAL, true, true, false);      
        BarRenderer renderer = null;
        CategoryPlot plot = chartFactory.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.BLUE);
        renderer = new BarRenderer();
        
        ChartFrame frame = new ChartFrame("Bar Chart for VitalSign", chartFactory);
        frame.setVisible(true);
        frame.setSize(700, 700);
        
        ChartPanel panel = new ChartPanel(chartFactory);
        this.add(panel);
        this.updateUI();
      }
      catch(Exception e)    {
          System.out.println(e);
      }
       
    }
    }

