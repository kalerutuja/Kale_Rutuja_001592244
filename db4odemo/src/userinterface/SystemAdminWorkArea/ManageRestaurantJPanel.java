/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Employee.Employee;
import static Business.Organization.Type.Customer;
import Business.Restaurant.Restaurant;
import Business.Role.AdminRole;
import static Business.Role.Role.RoleType.Customer;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rutuja
 */
public class ManageRestaurantJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddResturantPanel
     */
    JPanel userProcessContainer;
    EcoSystem system;
    public ManageRestaurantJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        addressTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JPasswordField();
        nameTextField = new javax.swing.JTextField();
        submitJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        restaurantTable = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add Restaurant Details");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 338, 29));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 22, -1, -1));

        jLabel2.setText("Restaurant name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 212, -1, -1));

        jLabel3.setText("Password ");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 330, -1, -1));

        jLabel4.setText("Username");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 290, -1, -1));
        add(usernameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, 140, -1));
        add(addressTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 240, 140, -1));

        jLabel5.setText("Restaurant Address");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, -1, -1));

        passwordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTextFieldActionPerformed(evt);
            }
        });
        add(passwordTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 320, 140, -1));
        add(nameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 210, 140, -1));

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 380, -1, -1));

        restaurantTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Admin", "Restaurant name", "Restaurant Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        restaurantTable.setToolTipText("");
        jScrollPane1.setViewportView(restaurantTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, -1, 95));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 380, -1, -1));

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 380, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void passwordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTextFieldActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        String name = nameTextField.getText();
        String address = addressTextField.getText();
        String username = usernameTextField.getText();
        String password = String.valueOf(passwordTextField.getPassword());

        if(system.checkIfUserIsUnique(username))
        {
            Restaurant restaurant = system.createRestaurant(name, username, address);
            Employee emp = restaurant.getEmployeeDirectory().createEmployee(name);
            UserAccount ua = system.getUserAccountDirectory().createUserAccount(username, password, emp, new AdminRole() {});
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Username has already been taken. Please enter another username.");
        }

        populateTable();
        nameTextField.setText("");
        usernameTextField.setText("");
        passwordTextField.setText("");
        addressTextField.setText("");
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        UserAccount u = null;
        Employee e = null;

        int selectedRow = restaurantTable.getSelectedRow();
        if(selectedRow >= 0) {
            Restaurant r = (Restaurant) restaurantTable.getValueAt(selectedRow, 0);
            if(system.getRestaurantDirectory().getRestaurantList().contains(r))
            {
                for(UserAccount userAccount: system.getUserAccountDirectory().getUserAccountList())
                {
                    if(userAccount.getUsername().equals(r.getRestaurantAdminUsername()))
                    {
                        u = userAccount;
                    }
                }
                for(Employee emp: r.getEmployeeDirectory().getEmployeeList())
                {
                    if(emp.getName().equals(r.getName()))
                    {
                        e = emp;
                    }
                }

            }
            system.getRestaurantDirectory().deleteRestaurant(r);
            system.getUserAccountDirectory().deleteUserAccount(u);
            r.getEmployeeDirectory().deleteEmployee(e);
            populateTable();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please select a restaurant to delete.");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRow = restaurantTable.getSelectedRow();
                if(selectedRow >= 0) {
                   Restaurant res = (Restaurant)restaurantTable.getValueAt(selectedRow, 0);
                   UpdateInformationJPanel updateUserInfo = new UpdateInformationJPanel(userProcessContainer,this.system,"Restaurant Admin",res.getRestaurantAdminUsername());
                   userProcessContainer.add("updateInfo",updateUserInfo);
                   CardLayout layout = (CardLayout)userProcessContainer.getLayout();
                   layout.next(userProcessContainer);
                   }
        else
        {
            JOptionPane.showMessageDialog(null, "Please select a Restaurant to update Info .");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressTextField;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JTable restaurantTable;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) restaurantTable.getModel();
        dtm.setRowCount(0);
        for (Restaurant restaurant : system.getRestaurantDirectory().getRestaurantList()) {
            Object row[] = new Object[3];
                row[0] = restaurant;
                row[1] = restaurant.getName();
                row[2] = restaurant.getAddress();
            dtm.addRow(row);
        }

}
}
