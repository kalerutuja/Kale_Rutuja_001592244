/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Customer.Customer;
import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Restaurant.Restaurant;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author rutuja
 */
public class UpdateInformationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ModifyRestaurant
     */
    JPanel userProcessContainer;
    EcoSystem system;
    String user;
    String username;
    
    public UpdateInformationJPanel(JPanel userProcessContainer, EcoSystem system, String user, String username) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.user = user;
        this.username = username;
        this.populateData();
        this.usernameTextField.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        submitJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        usernameTextField = new javax.swing.JTextField();
        passwordTextField = new javax.swing.JPasswordField();

        setBackground(new java.awt.Color(204, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Update  Details");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, 171, 29));
        add(nameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, 138, -1));

        jLabel2.setText("Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 210, -1, -1));

        jLabel3.setText("Password ");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, -1, -1));

        jLabel6.setText("Username");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, -1, -1));

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 270, -1, -1));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, -1, -1));

        usernameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTextFieldActionPerformed(evt);
            }
        });
        add(usernameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 110, 136, -1));

        passwordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTextFieldActionPerformed(evt);
            }
        });
        add(passwordTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 160, 136, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        String name = nameTextField.getText();
        String password = String.valueOf(passwordTextField.getPassword());
        if(this.user.equals("Customer"))
        {
                       for(Customer c: system.getCustomerDirectory().getCustomerList())
                        {
                                if(c.getName().equals(this.username))
                                {
                                        Customer cust = c;
                                        cust.setName(nameTextField.getText());
                                    }
                            }
            
                        for(UserAccount ua: system.getUserAccountDirectory().getUserAccountList())
                        {
                                if(ua.getUsername().equals(this.username))
                                {
                                        UserAccount userAccount = ua;
                                        ua.setPassword(password);
                                    }
                            }
                        JOptionPane.showMessageDialog(null, "Customer updated succesfully");
                        nameTextField.setText("");
                        passwordTextField.setText("");
                        usernameTextField.setText("");
        }
        else if(this.user.equals("DeliveryMan"))
        {
            DeliveryMan d = null;
            for(DeliveryMan dm: system.getDeliveryManDirectory().getDeliverymanList())
            {
                if(dm.getUsername().equals(this.username))
                {
                    d = dm;
                    d.setName(name);
                    break;
                }
            }
            for(UserAccount ua: system.getUserAccountDirectory().getUserAccountList())
            {
                if(ua.getUsername().equals(this.username))
                {
                    UserAccount userAccount = ua;
                    userAccount.setPassword(password);
                    break;
                }
            }
            String name1 = d.getName();
            for(Employee emp: system.getEmployeeDirectory().getEmployeeList())
            {
                if(name1.equals(emp.getName()))
                {
                    emp.setName(name);
                }
            }
            JOptionPane.showMessageDialog(null, "Delivery Man updated successfully");
        nameTextField.setText("");
        passwordTextField.setText("");
        usernameTextField.setText("");
        System.out.println("Print" + system.getEmployeeDirectory().getEmployeeList());
    }
           else if (this.user.equals("Admin"))
        {
            Restaurant r = null;
            for(Restaurant res: system.getRestaurantDirectory().getRestaurantList())
            {
                if(res.getRestaurantAdminUsername().equals(this.username))
                {
                    r = res;
                    r.setName(name);
                    break;
                }
            }
            for (UserAccount ua: system.getUserAccountDirectory().getUserAccountList())
            {
                if(ua.getUsername().equals(this.username))
                {
                    UserAccount userAccount = ua;
                    userAccount.setPassword(password);
                    break;
                }
                String name1 = r.getName();
                for(Employee emp: system.getEmployeeDirectory().getEmployeeList()){
                if(name1.equals(emp.getName()))
                {
                    emp.setName(name);
                }
            }
            JOptionPane.showMessageDialog(null, "Delivery Man updated successfully");
        nameTextField.setText("");
        passwordTextField.setText("");
        usernameTextField.setText("");
            }
            
        }
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        if(this.user.equals("DeliveryMan"))
        {
            ManageDeliveryManJPanel manageDeliveryManJPanel = (ManageDeliveryManJPanel) component;
            manageDeliveryManJPanel.populateTable();
        }

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_backJButtonActionPerformed

    private void passwordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTextFieldActionPerformed

    private void usernameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables

    private void populateData() {usernameTextField.setText(this.username);
        if(this.user.equals("Customer"))
        {
            for(Customer c: system.getCustomerDirectory().getCustomerList())
            {
                if(c.getName().equals(this.username))
                {
                    Customer cust = c;
                    nameTextField.setText(cust.getName());
                }
            }
            
            for(UserAccount ua: system.getUserAccountDirectory().getUserAccountList())
            {
                if(ua.getUsername().equals(this.username))
                {
                    UserAccount userAccount = ua;
                    passwordTextField.setText(userAccount.getPassword());
                }
         }
        }
        else if(this.user.equals("DeliveryMan"))
        {
           for(DeliveryMan d: system.getDeliveryManDirectory().getDeliverymanList())
            {
                if(d.getUsername().equals(this.username))
                {
                    DeliveryMan dm = d;
                    nameTextField.setText(dm.getName());
                }
            }
            
            for(UserAccount ua: system.getUserAccountDirectory().getUserAccountList())
            {
                if(ua.getUsername().equals(this.username))
                {
                    UserAccount userAccount = ua;
                    passwordTextField.setText(userAccount.getPassword());
                }
            }
        }
        else
        {
           //
        }

    }
}
