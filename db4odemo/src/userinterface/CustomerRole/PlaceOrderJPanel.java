/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Menu.Menu;
import Business.Menu.MenuDirectory;
import Business.Orders.Order;
import Business.Orders.OrderHistory;
import Business.Restaurant.Restaurant;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class PlaceOrderJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private String quantity;
    private UserAccount userAccount;
    private EcoSystem system;
    private String selectedRestaurantName;
    Menu menu;
    ArrayList<Menu> ml;
    DefaultTableModel dtm;
    private String selectedRestaurantname;
    private Restaurant resObj;
    Order order;
    Double total1;

    
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public PlaceOrderJPanel(JPanel userProcessContainer, UserAccount account,EcoSystem system) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.userAccount = account;
        this.total1= 0.0;
        populateRequestTable();
        populateComboBox();
        tableListener();
        
              
    }
    public void populateComboBox(){
         for(Restaurant res: system.getRestaurantDirectory().getRestaurantList()){
            cmbRestaurant.addItem(res.getName());
         
        }
    }
  
     public void populateRequestTable() {
        //
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        logoImage = new javax.swing.JLabel();
        btnaddcart = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        btnPOrder = new javax.swing.JButton();
        btnTrack = new javax.swing.JButton();
        tblComment = new javax.swing.JScrollPane();
        comments = new javax.swing.JTextArea();
        cmbRestaurant = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        menuItem = new javax.swing.JTable();
        lblcomment = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Place Order");

        jLabel2.setText("Select Restaurant");

        jLabel3.setText("Menu:");

        btnaddcart.setText("Add To Cart");
        btnaddcart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddcartActionPerformed(evt);
            }
        });

        jLabel4.setText("Total Amount:");

        btnPOrder.setText("Place Order");
        btnPOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPOrderActionPerformed(evt);
            }
        });

        btnTrack.setText("Track Order");
        btnTrack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrackActionPerformed(evt);
            }
        });

        comments.setColumns(20);
        comments.setRows(5);
        tblComment.setViewportView(comments);

        cmbRestaurant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRestaurantActionPerformed(evt);
            }
        });

        menuItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Item name", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(menuItem);

        lblcomment.setText("Add comment:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(244, 244, 244)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cmbRestaurant, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(64, 64, 64)
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(97, 97, 97)
                                .addComponent(logoImage, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(120, 120, 120)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnaddcart, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnPOrder, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(51, 51, 51))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblcomment)
                                        .addGap(61, 61, 61)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tblComment, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnTrack))))))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnPOrder, btnTrack, btnaddcart});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbRestaurant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(logoImage, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnaddcart)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tblComment, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(btnTrack))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(lblcomment)
                                .addGap(46, 46, 46)
                                .addComponent(btnPOrder)))
                        .addGap(86, 86, 86))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbRestaurantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRestaurantActionPerformed
        // TODO add your handling code here:
        selectedRestaurantname = String.valueOf(cmbRestaurant.getSelectedItem());
        getMenuItems(selectedRestaurantname);
    }//GEN-LAST:event_cmbRestaurantActionPerformed

    private void btnaddcartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddcartActionPerformed
        // TODO add your handling code here:
        Menu menu1 = new Menu();
        MenuDirectory md = new MenuDirectory();
        
        menu1.setItemName(menu.getItemName());
        menu1.setItemPrice(menu.getItemPrice());
        menu1.setQuantity(Integer.parseInt(quantity));
       
        ml.add(menu1);
        
        total1 = total1 + menu.getItemPrice() * Integer.parseInt(quantity);
        this.lblTotal.setText(String.valueOf(total1));
        JOptionPane.showMessageDialog(null,"Item added to cart. Please add more items or Place Order to Proceed"
                , "INFO", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnaddcartActionPerformed

    private void btnPOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPOrderActionPerformed
        // TODO add your handling code here:
        OrderHistory orderHistory;
        ArrayList<Order> oh ;
        if(system.getOrderHistory()==null){
             orderHistory = new OrderHistory();
        }else
             orderHistory = system.getOrderHistory();
        
        
        if(orderHistory.getOrderHisotry()==null){
            oh = new ArrayList();
        }else
            oh = orderHistory.getOrderHisotry();
            
        
        
        MenuDirectory md = new MenuDirectory();
        md.setMenu(ml);
        System.out.println("Menu List "+ ml.size());
        System.out.println("Menu List "+ ml.get(0).getItemName());
        Order order = new Order();
        order.setMenuDirectory(md);
        order.setRestaurant(resObj);
        order.setUserAccount(userAccount);
        order.setComments(comments.getText());
        order.setAmount(total1);
        oh.add(order);
        orderHistory.setOrderHisotry(oh);
        
        
        system.setOrderHistory(orderHistory);
        
        JOptionPane.showMessageDialog(null,"Order Placed Successfully"
                , "INFO", JOptionPane.INFORMATION_MESSAGE);
       

    
    }//GEN-LAST:event_btnPOrderActionPerformed

    private void btnTrackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTrackActionPerformed

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPOrder;
    private javax.swing.JButton btnTrack;
    private javax.swing.JButton btnaddcart;
    private javax.swing.JComboBox cmbRestaurant;
    private javax.swing.JTextArea comments;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblcomment;
    private javax.swing.JLabel logoImage;
    private javax.swing.JTable menuItem;
    private javax.swing.JScrollPane tblComment;
    // End of variables declaration//GEN-END:variables

   

    private void tableListener() {
       dtm = (DefaultTableModel) menuItem.getModel();
        dtm.setRowCount(0);
       
        dtm.addTableModelListener(
            new TableModelListener()
            {
                public void tableChanged(TableModelEvent evt)
                {
                    
                    int col = evt.getColumn();
                    int row = evt.getFirstRow();
                    System.out.println(row+"as");
                    System.out.println(col+"as1");
                    menu = (Menu)dtm.getValueAt(row, 0);
                    quantity = String.valueOf(dtm.getValueAt(row,2));
                }
            });
}
    public void getMenuItems(String resName){
        resObj = system.getRestaurantDirectory().findRestaurant(resName);
         
        if(resObj!=null && resObj.getMd()!=null){
            for(Menu m : resObj.getMd().getMenu()) {
                Object row[] = new Object[3];
                row[0] = m;
                row[1] = m.getItemPrice();

                dtm.addRow(row);
            }
        }
      
    }
}

